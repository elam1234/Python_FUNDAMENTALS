DAY 1: Introduction to Python Fundamentals

Welcome to Day 1 of our Python programming course! In this session, we'll lay the foundation by covering essential concepts such as data types, variables, conditional statements, 
looping statements, and sequence data types in Python. Additionally, we'll conclude the session with a simple project to apply what we've learned. Let's get started!

1. Data Types:

Data types represent the type of data stored in variables. Common data types in Python include:
Integer (int): Whole numbers without decimal points.
Float (float): Numbers with decimal points.
String (str): Sequence of characters enclosed in single or double quotes.
Boolean (bool): Represents True or False values.

2. Variables:

Variables are used to store data values. In Python, variables are created when you assign a value to them using the assignment operator =. For example:
python
Copy code
x = 10
name = "Alice"

3. Conditional Statements:

Conditional statements allow us to make decisions in our programs based on certain conditions. Key constructs include:
if statement: Executes a block of code if a specified condition is true.
elif statement: Allows for additional conditions to be checked after the initial if statement.
else statement: Executes a block of code if none of the preceding conditions are true.

4. Looping Statements:

Looping statements are used to execute a block of code repeatedly. In Python, we have two main types of loops:
for loop: Iterates over a sequence (e.g., list, tuple, string) or a range of numbers.
while loop: Continues to execute a block of code as long as a specified condition is true.

5. Sequence Data Types in Python:

Python provides several built-in sequence data types, including:
Lists: Ordered and mutable collections of items.
Tuples: Ordered and immutable collections of items.
Strings: Immutable sequences of characters.
Dictionaries: Unordered collections of key-value pairs.
Sets: Unordered collections of unique elements.

6. Simple Project:

To reinforce our understanding of the concepts covered, we'll work on a simple project together. Stay tuned!
That concludes our overview of today's topics. By the end of this session, you'll have a solid grasp of Python fundamentals, 
setting the stage for more advanced concepts in the days to come. Let's dive into the world of Python programming together!
